/*
Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
*/

class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        def backtrack(index, nums, curr, subset):
            subset.append(curr[:])
            for i in range(index, len(nums)):
                curr.append(nums[i])
                backtrack(i+1, nums, curr, subset)
                curr.pop()
            return subset
        
        subset = []
        return backtrack(0, nums, [], subset)
        
        
